#!/bin/sh

check_err()
{
    if [ "$1" -ne "0" ]; then
        echo "Error # ${1} : ${2}"
        exit ${1}
    fi
}

run()
{
    INPUT_VIDEO=$1
    MEDIA_NAME=$2

    if [[ -z "$INPUT_VIDEO" || -z "$MEDIA_NAME" ]]; then
        echo "$0 require input video file or path and media name"
        return 1
    fi

    # create index folder
    mkdir -p ./media/$MEDIA_NAME/hls

    # create index file
    printf '#EXTM3U\n#EXT-X-STREAM-INF:BANDWIDTH=375000,RESOLUTION=640x360\n360_out.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=750000,RESOLUTION=854x480\n480_out.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=2000000,RESOLUTION=1280x720\n720_out.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=3500000,RESOLUTION=1920x1080\n1080_out.m3u8' > ./media/$MEDIA_NAME/hls/$MEDIA_NAME.m3u8

    # 360p video
    ffmpeg -i $INPUT_VIDEO -profile:v baseline -level 3.0 -s 640x360 -start_number 0 -hls_time 10 -hls_list_size 0 -f hls ./media/$MEDIA_NAME/hls/360_out.m3u8

    # 480p video
    ffmpeg -i $INPUT_VIDEO -profile:v baseline -level 3.0 -s 800x480 -start_number 0 -hls_time 10 -hls_list_size 0 -f hls ./media/$MEDIA_NAME/hls/480_out.m3u8

    # 720p video
    ffmpeg -i $INPUT_VIDEO -profile:v baseline -level 3.0 -s 1280x720 -start_number 0 -hls_time 10 -hls_list_size 0 -f hls ./media/$MEDIA_NAME/hls/720_out.m3u8

    # 1080p video
    ffmpeg -i $INPUT_VIDEO -profile:v baseline -level 3.0 -s 1920x1080 -start_number 0 -hls_time 10 -hls_list_size 0 -f hls ./media/$MEDIA_NAME/hls/1080_out.m3u8

    return 0
}

run "$@"
check_err $? "convert video to hls failed....!"


# TODO
# curl https://raw.githubusercontent.com/wuriyanto48/build-tools/master/hls.sh | sh -s gunung.mp4 gunung